package TetrisOwn;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;

import TetrisOwn.Shape.Tetrinomes;;

public class Board extends JPanel implements ActionListener{

    final int BoardWidth = 10;
    final int BoardHeight = 22;

    Timer timer;
    boolean isFallingFinished = false;
    boolean isStarted = false;
    boolean isPaused = false;
    int numLinesRemoved = 0;
    int curX = 0;
    int curY = 0;
    JLabel statusbar;
    Shape curPiece;
    Tetrinomes[] board;
    
    public Board(Tetris parent){
    	statusbar = parent.getStatusBar();
    	board = new Tetrinomes[BoardWidth * BoardHeight];
    	timer = new Timer(400, this);
    	curPiece = new Shape();
    	setFocusable(true);
    	timer.start();
    	clearBoard();
    	addKeyListener(new TAdapter());
    }
    
    public void start(){
    	
    }
    
    @Override
	protected void paintComponent(Graphics g) {
		// TODO Auto-generated method stub
		super.paintComponent(g);
	}

	private class TAdapter extends KeyAdapter{

		@Override
		public void keyPressed(KeyEvent e) {
			// TODO Auto-generated method stub
			super.keyPressed(e);
		}
    	
    }
    
	private void clearBoard() {
		for(int i = 0; i < BoardWidth * BoardHeight; i++){
			board[i] = Tetrinomes.NoShape;
		}
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		
	}
	
}
